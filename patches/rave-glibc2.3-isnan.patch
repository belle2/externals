diff --git a/src/RecoVertex/GaussianSumVertexFit/src/GsfVertexWeightCalculator.cc b/src/RecoVertex/GaussianSumVertexFit/src/GsfVertexWeightCalculator.cc
index e6c4d25..b5293d4 100644
--- a/src/RecoVertex/GaussianSumVertexFit/src/GsfVertexWeightCalculator.cc
+++ b/src/RecoVertex/GaussianSumVertexFit/src/GsfVertexWeightCalculator.cc
@@ -56,7 +56,7 @@ double GsfVertexWeightCalculator::calculate(const  VertexState & oldVertex,
   double weight = pow(2. * M_PI, -0.5 * 5) * sqrt(1./sigmaDet) * exp(-0.5 * chi);
   // edm::LogError("GsfVertexWeightCalculator") << "w=" << weight << " chi=" << chi << " sigmaDet=" << sigmaDet;
 
-  if (::isnan(weight) || sigmaDet<=0.) {
+  if (isnan(weight) || sigmaDet<=0.) {
     edm::LogWarning("GsfVertexWeightCalculator") << "Weight is NaN";
     return 0.;
     // return -1.;
diff --git a/src/RecoVertex/VertexTools/interface/SequentialVertexFitter.h b/src/RecoVertex/VertexTools/interface/SequentialVertexFitter.h
index 7bc98ff..b60473c 100644
--- a/src/RecoVertex/VertexTools/interface/SequentialVertexFitter.h
+++ b/src/RecoVertex/VertexTools/interface/SequentialVertexFitter.h
@@ -240,7 +240,7 @@ private:
    * Checks whether any of the three coordinates is a Nan
    */
   inline bool hasNan(const GlobalPoint& point) const {
-    return (isnan(point.x())|| isnan(point.y()) || isnan(point.z()));
+    return (std::isnan(point.x())|| std::isnan(point.y()) || std::isnan(point.z()));
   }
 
 
