diff -rupN src/TrackingTools/GeomPropagators/interface/IterativeHelixExtrapolatorToLine.h ../rave_fixed/src/TrackingTools/GeomPropagators/interface/IterativeHelixExtrapolatorToLine.h
--- src/TrackingTools/GeomPropagators/interface/IterativeHelixExtrapolatorToLine.h	2015-07-03 11:10:55.927204628 +0200
+++ src/TrackingTools/GeomPropagators/interface/IterativeHelixExtrapolatorToLine.h	2015-08-20 12:45:19.377269112 +0200
@@ -24,17 +24,13 @@ public:
    *  along the helix from the starting point to the closest approach. 
    *  to the point. The starting point is given in the constructor.
    */
-  virtual std::pair<bool,double> pathLength (const GlobalPoint& point) const {
-    return genericPathLength(point);
-  }
+  virtual std::pair<bool,double> pathLength (const GlobalPoint& point) const;
 
   /** Propagation status (true if valid) and (signed) path length 
    *  along the helix from the starting point to the closest approach
    *  to the line. The starting point is given in the constructor.
    */
-  virtual std::pair<bool,double> pathLength (const Line& line) const {
-    return genericPathLength(line);
-  }
+  virtual std::pair<bool,double> pathLength (const Line& line) const;
 
   /** Position at pathlength s from the starting point.
    */
diff -rupN src/TrackingTools/GeomPropagators/src/IterativeHelixExtrapolatorToLine.cc ../rave_fixed/src/TrackingTools/GeomPropagators/src/IterativeHelixExtrapolatorToLine.cc
--- src/TrackingTools/GeomPropagators/src/IterativeHelixExtrapolatorToLine.cc	2015-07-03 11:10:55.947205256 +0200
+++ src/TrackingTools/GeomPropagators/src/IterativeHelixExtrapolatorToLine.cc	2015-08-20 12:49:21.662363550 +0200
@@ -31,6 +31,21 @@ IterativeHelixExtrapolatorToLine::Iterat
   theCosTheta = pz/p;
   theSinTheta = pt/p;
 }
+
+// Propagation status (true if valid) and (signed) path length 
+// along the helix from the starting point to the closest approach. 
+// to the point. The starting point is given in the constructor.
+std::pair<bool,double> IterativeHelixExtrapolatorToLine::pathLength (const GlobalPoint& point) const {
+  return genericPathLength(point);
+}
+
+// Propagation status (true if valid) and (signed) path length 
+// along the helix from the starting point to the closest approach
+//  to the line. The starting point is given in the constructor.
+std::pair<bool,double> IterativeHelixExtrapolatorToLine::pathLength (const Line& line) const {
+  return genericPathLength(line);
+}
+
 //
 // Propagation status and path length to intersection
 //
