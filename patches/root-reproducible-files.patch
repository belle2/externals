From 170d420c390a0452e3e354f37d1ddeea999a9468 Mon Sep 17 00:00:00 2001
From: Martin Ritter <martin.ritter@lmu.de>
Date: Mon, 6 Apr 2020 13:05:11 +0000
Subject: [PATCH] Allow setting the name stored in a reproducible TFile

---
 io/io/src/TFile.cxx | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/io/io/src/TFile.cxx b/io/io/src/TFile.cxx
index d13bac6..9529853 100644
--- a/io/io/src/TFile.cxx
+++ b/io/io/src/TFile.cxx
@@ -292,6 +292,13 @@ TFile::TFile() : TDirectoryFile(), fCompress(ROOT::RCompressionSetting::EAlgorit
 /// values for creation and modification date of TKey/TDirectory objects and
 /// null value for TUUID objects inside TFile. As drawback, TRef objects stored
 /// in such file cannot be read correctly.
+///
+/// In case the name of the file is not reproducible either (in case of
+/// creating temporary filenames) a value can be passed to the reproducible
+/// option to replace the name stored in the file.
+/// ~~~{.cpp}
+///   TFile *f = TFile::Open("tmpname.root?reproducible=fixedname","RECREATE","File title");
+/// ~~~
 
 TFile::TFile(const char *fname1, Option_t *option, const char *ftitle, Int_t compress)
            : TDirectoryFile(), fCompress(compress), fUrl(fname1,kTRUE)
@@ -402,6 +409,11 @@ TFile::TFile(const char *fname1, Option_t *option, const char *ftitle, Int_t com
       goto zombie;
    }
 
+   // If the user supplied a value to the option take it as the name to set for the file instead of the actual filename
+   if(auto name=fUrl.GetValueFromOptions("reproducible"); name) {
+      SetName(name);
+   }
+
    if (recreate) {
       if (!gSystem->AccessPathName(fname, kFileExists)) {
          if (gSystem->Unlink(fname) != 0) {
-- 
2.25.2

