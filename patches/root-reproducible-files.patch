diff --git a/core/base/inc/TDirectory.h b/core/base/inc/TDirectory.h
index 3050f695d5..856dcdd08c 100644
--- a/core/base/inc/TDirectory.h
+++ b/core/base/inc/TDirectory.h
@@ -93,6 +93,7 @@ protected:
    mutable std::atomic_flag fSpinLock; //! MSVC doesn't support = ATOMIC_FLAG_INIT;
 
    static Bool_t fgAddDirectory;   //!flag to add histograms, graphs,etc to the directory
+   static Bool_t fgReproducible;   //!Whether fixed values should be used for name, title, UUID, and datimes
 
           Bool_t  cd1(const char *path);
    static Bool_t  Cd1(const char *path);
@@ -206,6 +207,9 @@ public:
    static void         DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize = 0);
    static void         EncodeNameCycle(char *buffer, const char *name, Short_t cycle);
 
+   static void         MakeReproducible(Bool_t reproducible = kTRUE) {fgReproducible = reproducible;}
+   static Bool_t       IsReproducible() {return fgReproducible;}
+
    ClassDef(TDirectory,5)  //Describe directory structure in memory
 };
 
diff --git a/core/base/src/TDatime.cxx b/core/base/src/TDatime.cxx
index 1ef321ef44..2a67d09bfe 100644
--- a/core/base/src/TDatime.cxx
+++ b/core/base/src/TDatime.cxx
@@ -39,6 +39,7 @@ required, use TTimeStamp.
 #include "TError.h"
 #include "Bytes.h"
 #include "TString.h"
+#include "TDirectory.h"
 
 
 ClassImp(TDatime);
@@ -287,6 +288,11 @@ void TDatime::ReadBuffer(char *&buffer)
 
 void TDatime::Set()
 {
+   if (TDirectory::IsReproducible()) {
+      fDatime = UInt_t(0);
+      return;
+   }
+
 #ifndef WIN32
    time_t tloc   = time(0);
 #ifdef _REENTRANT
diff --git a/core/base/src/TDirectory.cxx b/core/base/src/TDirectory.cxx
index 8fce0f1a59..7055d13525 100644
--- a/core/base/src/TDirectory.cxx
+++ b/core/base/src/TDirectory.cxx
@@ -29,6 +29,7 @@
 #include "TSpinLockGuard.h"
 
 Bool_t TDirectory::fgAddDirectory = kTRUE;
+Bool_t TDirectory::fgReproducible = kFALSE;
 
 const Int_t  kMaxLen = 2048;
 
diff --git a/io/io/src/TFile.cxx b/io/io/src/TFile.cxx
index 7f6e0edc96..94914fbdf4 100644
--- a/io/io/src/TFile.cxx
+++ b/io/io/src/TFile.cxx
@@ -650,6 +650,10 @@ void TFile::Init(Bool_t create)
       new TFree(fFree, fBEGIN, Long64_t(kStartBigFile));  //Create new free list
 
       //*-* Write Directory info
+      if (fgReproducible) {
+         fName = "ReproducibleRootFile";
+         fUUID.SetUUID("00000000-0000-0000-0000-000000000000");
+      }
       Int_t namelen= TNamed::Sizeof();
       Int_t nbytes = namelen + TDirectoryFile::Sizeof();
       TKey *key    = new TKey(fName, fTitle, IsA(), nbytes, this);
